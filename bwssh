#!/usr/bin/env bash
echo "Bitwarden ssh auto login wrapper 0.0.1"
SCRIPT_DIR="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"

if [[ "$(which bw)" == "" ]]; then
	echo >&2 "bw command required!"
	echo >&2 "Install via https://github.com/bitwarden/cli"
	return
fi

cmd=${@:1}
useConf=0
confLine=""

confirmBwssh() {
	read -p "Exec [$cmd] with bitwarden credential? [Y/n] " confirm </dev/tty
	echo ''
	if [[ "$confirm" == "" || "$confirm" == "Y" || "$confirm" == "y" ]]; then
		echo 1
	elif [[ "$confirm" == "N" || "$confirm" == "n" ]]; then
		echo 0
	else
		confirmBwssh
	fi
}

extractJson() {
	local json=$1
	local key=$2
	if [[ "$(which node)" == "" ]]; then
		echo >&2 "node command required!"
		echo >&2 "Install via https://nodejs.org/en/"
		return
	fi
	node -e "var tmp=${json}; console.log(tmp.${key} || '')"
}

doBwssh() {
	host=$1
	objectId=$2

	# ensure login
	capture_output() {
		while IFS=\n read -r line; do
			if [[ "$line" =~ \ BW_SESSION\= ]]; then
				key="${line#*\"}"
				key="${key%%\"}"
				export BW_SESSION="$key"
				return 0
			fi
		done <<< $1
		return 1
	}

	login() {
		cmd_output=$(bw login $BW_ID $BW_PWD)
		capture_output "$cmd_output"
		return $?
	}

	unlock() {
		cmd_output=$(bw unlock $BW_PWD)
		capture_output "$cmd_output"
		return $?
	}

	if [[ "${BW_SESSION}" == "" ]]; then
		login
	fi
	if [[ "${BW_SESSION}" == "" ]]; then
		unlock
	fi

	# try get
	local secret=$(bw get item $objectId || echo failed)
	if [[ "$(echo "$secret" | tail -1)" == "failed" ]]; then
		echo "Get item failed: $(echo "$secret" | head -n -1)"
		echo "(might be duplicated bw session, auto clear old session, just retry)"
		unset BW_SESSION
		return
	else
		local password=$(extractJson "$secret" login.password)
		local totp=$(extractJson "$secret" login.totp)
		if [[ "$totp" != "" ]]; then
			if [[ "$(which oathtool)" == "" ]]; then
				echo >&2 "oathtool command required to generate totp 2fa pin"
				echo >&2 "Install via: apt install oathtool"
				return
			fi
			local pin=$(oathtool -b --totp $totp)
		fi
		if [[ "$(which expect)" == "" ]]; then
			echo >&2 "expect command required!"
			echo >&2 "Install via: apt install expect"
			return
		fi
		expect ${SCRIPT_DIR}/bwssh.expect "$cmd" "$password" "$pin"
	fi
}

if [[ ! -f ~/.bwssh ]]; then
	echo >&2 "Waring: This command only works when ssh host & bitwarden object id specified in ~/.bwssh"
	$cmd
	return
fi

while read line; do
	if [[ "$(echo $line | grep '^#')" != "" ]]; then
		continue
	fi
	conf=($(echo $line | tr ',' "\n"))
	host=${conf[0]}
	objectId=${conf[1]}
	if [[ "$host" == "" || "$objectId" == "" ]]; then
		continue
	fi
	if [[ "$(echo $cmd | grep $host)" != "" ]]; then
		if [[ "$(confirmBwssh | tail -1)" == "1" ]]; then
			useConf=1
			confLine=$line
		fi
	fi
done <  <(grep . ~/.bwssh)

if [[ "$useConf" == "0" ]]; then
	$cmd
else
	doBwssh $confLine
fi
